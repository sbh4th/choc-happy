dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10) +(trtGrp * p3 * 5) + u0 + e0", variance = 10)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 2,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10) +(trtGrp * p3 * 5) + u0 + e0", variance = 20)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 10,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 2)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10) +(trtGrp * p3 * 5) + u0 + e0", variance = 2)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
summary(test)
summary(testcr)
library(ICC)
ICCbare(id, y, data=dtTime)
gen.school <- defData(varname = "s0", dist = "normal", formula = 0, variance = 3,
id = "idSchool")
gen.school <- defData(gen.school, varname = "nClasses", dist = "noZeroPoisson",
formula = 3)
dtSchool <- genData(8, gen.school)
dtSchool <- trtAssign(dtSchool, n = 2)
gen.class <- defDataAdd(varname = "c0", dist = "normal", formula = 0, variance = 2)
gen.class <- defDataAdd(gen.class, varname = "nStudents", dist = "noZeroPoisson",
formula = 20)
dtClass <- genCluster(dtSchool, "idSchool", numIndsVar = "nClasses", level1ID = "idClass")
dtClass <- addColumns(gen.class, dtClass)
gen.student <- defDataAdd(varname = "Male", dist = "binary",
formula = 0.5)
gen.student <- defDataAdd(gen.student, varname = "age", dist = "uniform",
formula = "9.5; 10.5")
gen.student <- defDataAdd(gen.student, varname = "test", dist = "normal",
formula = "50 - 5*Male + s0 + c0 + 8 * trtGrp", variance = 2)
dtStudent <- genCluster(dtClass, cLevelVar = "idClass", numIndsVar = "nStudents",
level1ID = "idChild")
dtStudent <- addColumns(gen.student, dtStudent)
View(dtStudent)
lm(test ~ trtGrp + Male + age, data=dtStudent)
summary(lm(test ~ trtGrp + Male + age, data=dtStudent))
summary(lm_robust(test ~ trtGrp + Male + age, data=dtStudent, clusters=idSchool))
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 2,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 2)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 2)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 2,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 2)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 2,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 0)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 20,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 2)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 2)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
summary(test)
summary(testcr)
ggplot(dtTime, aes(x=period, y=y, colour=id)) + geom_dotplot()
ggplot(dtTime, aes(x=period, y=y, colour=id)) + geom_scatter()
ggplot(dtTime, aes(x=period, y=y, colour=id)) + geom_point()
ggplot(dtTime, aes(x=y, y=id, colour=id)) + geom_point()
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 0)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
ggplot(dtTime, aes(x=y, y=id, colour=id)) + geom_point()
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 20)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 20)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2 * u0) + (p3 * 10)  + (trtGrp * p3 * 5 * u0) + u0 + e0", variance = 20)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 50)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
plot(ggpredict(test, terms = c("period", "treated")), connect.lines = TRUE, rawdata = TRUE)
summary(test)
summary(testcr)
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
dtIndiv <- trtAssign(dtIndiv, n = 2)
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
dtTime <- addColumns(addef, dtTime)
dtTime$period <- factor(dtTime$period, levels=c(1,2,3), labels=c("Pre", "Intervention", "Post"))
dtTime$treated <- factor(dtTime$trtGrp, levels=c(0,1), labels=c("Control", "Treated"))
test <- lm(y ~ treated * period, data=dtTime)
testcr <- lm_robust(y ~ treated * period, data=dtTime, clusters=id)
summary(test)
summary(testcr)
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
# dummy variables for each period
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
# outcome variable, varies by time
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
# add outcome to dataset
dtTime <- addColumns(addef, dtTime)
View(d)
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number())
# dummy variables for each period
dtTime$p2 <- ifelse(dtTime$period==2, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==3, 1, 0)
# outcome variable, varies by time
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
# add outcome to dataset
dtTime <- addColumns(addef, dtTime)
## 1
# define variable for dataset
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number()-1)
## 1
# define variable for dataset
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number()-1)
# dummy variables for each period
dtTime$p2 <- ifelse(dtTime$period==1, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==2, 1, 0)
# outcome variable, varies by time
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
# add outcome to dataset
dtTime <- addColumns(addef, dtTime)
# variable for treated
dtTime$treated <- dtTime$trtGrp
vars <- c("id", "treated", "period", "y")
csv <- dtTime[vars]
myvars <- names(dtTime) %in% c("id", "treated", "period", "y")
myvars <- subset(dtTime, select=c("id", "treated", "period", "y"))
View(myvars)
write_csv(myvars, "../data-source/choc-data-raw-r.csv", na = "NA",
append = FALSE, col_names = !append, quote_escape = "double")
write_csv(myvars, "../data-source/choc-data-raw-r.csv", na = "NA",
append = FALSE, col_names = TRUE, quote_escape = "double")
#  program:  choc-data-sim.R
#  task:     simulate chocolate data
#  input:    none
#  output:   choc-data-raw-r.csv
#  project:  graduate student chocolate intervention study
#  author:   sam harper \ 2020-03-01
## 0
# load packages
library(simstudy)
library(tidyverse)
## 1
# define variable for dataset
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number()-1)
# dummy variables for each period
dtTime$p2 <- ifelse(dtTime$period==1, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==2, 1, 0)
# outcome variable, varies by time
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
# add outcome to dataset
dtTime <- addColumns(addef, dtTime)
# variable for treated
dtTime$treated <- dtTime$trtGrp
# export to CSV file
myvars <- subset(dtTime, select=c("id", "treated", "period", "y"))
write_csv(myvars, "../data-source/choc-data-raw-r.csv", na = "NA",
append = FALSE, col_names = TRUE, quote_escape = "double")
#  program:  choc-data-sim.R
#  task:     simulate chocolate data
#  input:    none
#  output:   choc-data-raw-r.csv
#  project:  graduate student chocolate intervention study
#  author:   sam harper \ 2020-03-01
## 0
# load packages and set the seed
library(simstudy)
library(tidyverse)
set.seed(8231)
## 1
# define variable for dataset
# generate 500 individuals, 3 periods of observation
gen.indiv <- defData(varname = "u0", dist = "normal", formula = 0, variance = 1,
id = "id")
gen.indiv <- defData(gen.indiv, varname = "nperiods", dist = "nonrandom",
formula = 3)
dtIndiv <- genData(500, gen.indiv)
# 50 percent randomly assigned to treatment
dtIndiv <- trtAssign(dtIndiv, n = 2)
## 2
# expand dataset to 3 periods per individual
gen.time <- defDataAdd(varname = "e0", dist = "normal", formula = 0, variance = 5)
gen.time <- defDataAdd(gen.time, varname = "nPeriods", dist = "nonrandom",
formula = 3)
dtTime <- genCluster(dtIndiv, "id", numIndsVar = "nperiods", level1ID = "idTime")
dtTime <- addColumns(gen.time, dtTime)
# create index for period number for each individual
dtTime <- dtTime %>% group_by(id) %>% mutate(period = row_number()-1)
# dummy variables for each period
dtTime$p2 <- ifelse(dtTime$period==1, 1, 0)
dtTime$p3 <- ifelse(dtTime$period==2, 1, 0)
# outcome variable, varies by time
addef <- defDataAdd(varname = "y", dist = "normal",
formula = "10 + (p2 * 5) + (trtGrp * p2 * 2) + (p3 * 10)  + (trtGrp * p3 * 5) + u0 + e0", variance = 50)
# add outcome to dataset
dtTime <- addColumns(addef, dtTime)
# variable for treated
dtTime$treated <- dtTime$trtGrp
# export to CSV file
myvars <- subset(dtTime, select=c("id", "treated", "period", "y"))
write_csv(myvars, "../data-source/choc-data-raw-r.csv", na = "NA",
append = FALSE, col_names = TRUE, quote_escape = "double")
out <- summary(t2i)
est <- round(out$coefficients[6,1])
est
out$coefficients[6,2]
t2icr <- lm_robust(y ~ treated * period, data=d, clusters=id)
outcr <- summary(t2icr)
outcr$coefficients[6,2]
